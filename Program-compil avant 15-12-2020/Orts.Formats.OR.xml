<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Orts.Formats.OR</name>
    </assembly>
    <members>
        <member name="T:Orts.Formats.OR.MSTSItems">
            <summary>
            MSTSItems retains all the items comming from MSTS route config represented by GlobalItem derived classes.
            </summary>
        </member>
        <member name="M:Orts.Formats.OR.MSTSItems.#ctor">
            <summary>
            The MSTSItems class constructor.
            </summary>
        </member>
        <member name="M:Orts.Formats.OR.MSTSItems.AddSegment(Orts.Formats.OR.TrackSegment)">
            <summary>
            Used to add a new segment to the list of segments managed by the editor.
            </summary>
            <param name="line">A TrackSegment instance to be added.</param>
        </member>
        <member name="M:Orts.Formats.OR.MSTSItems.AddSiding(Orts.Formats.OR.TrackSegment,Orts.Formats.Msts.TrItem,Orts.Formats.OR.AETraveller)">
            <summary>
            Used to add a new siding (start or end) to the list of siding  managed by the editor.
            </summary>
            <param name="trSegment">The TrackSegment associated to the siding as TrackSegment instance.</param>
            <param name="info"></param>
            <param name="travel"></param>
            <returns>Return a new SideItem instance</returns>
        </member>
        <member name="M:Orts.Formats.OR.MSTSItems.GetTrackSegment(System.UInt32)">
            <summary>
            Search through 'segments', 'switches' or 'buffer' for the item in relation with the TrackNode index
            </summary>
            <param name="nodeIdx">The TrackNode index to search for</param>
            <returns>GlobalItem, use the typeItem as 'TypeItem' to do the casting</returns>
        </member>
        <member name="M:Orts.Formats.OR.MSTSItems.GetTrackSegment(Orts.Formats.Msts.TrackNode,System.Int32)">
            <summary>
            Search through 'segments', 'switches' or 'buffer' for the item in relation with the given TrackNode and sectionIdx
            </summary>
            <param name="node">The TrackNode to search for</param>
            <param name="sectionIdx">in case of multiple VectorNode, the index of the relevant vector</param>
            <returns>GlobalItem, use the typeItem as 'TypeItem' to do the casting</returns>
        </member>
        <member name="M:Orts.Formats.OR.MSTSItems.GetTrackSegment(System.Int32,System.Int32)">
            <summary>
            Search through 'segments' for the item in relation with the given TrackNodeIdx and sectionIdx
            This methof return only a TrackSegment
            </summary>
            <param name="nodeIdx">The index of the node in TrackNode</param>
            <param name="sectionIdx">The index of the vector in the TrackNode</param>
            <returns>TrackSegment</returns>
        </member>
        <member name="M:Orts.Formats.OR.MSTSItems.findSegmentFromMouse(System.Drawing.PointF,System.Double)">
            <summary>
            Search a segment from the coordinate of the mouse.
            </summary>
            <param name="pt">The real coordinate pointed by the mouse</param>
            <param name="snapSize">A circle in wich the segment must cross</param>
            <returns>GlobalItem but for now, only a TrackSegment</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Orts.Formats.OR.MSTSItems.getBuffers" -->
        <!-- Badly formed XML comment ignored for member "M:Orts.Formats.OR.MSTSItems.getSegments" -->
        <member name="M:Orts.Formats.OR.MSTSItems.GetShape(System.Int32)">
            <summary>
            Search for a shape by index, if no occurence, create one and return it
            Work in Progress
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="T:Orts.Formats.OR.TagItem">
            <summary>
            Used to represent a tag, a mark with a name and used to facilitate navigation in the viewer 
            </summary>
        </member>
        <member name="T:Orts.Formats.OR.TrackSegment">
            <summary>
            Defines a geometric Track segment.
            </summary>
        </member>
        <member name="M:Orts.Formats.OR.AESignals.#ctor(Orts.Formats.OR.MSTSData,Orts.Formats.Msts.SignalConfigurationFile)">
            
             Constructor
            
        </member>
        <member name="P:Orts.Formats.OR.AESignals.SignalObjects">
             
             Gets an array of all the SignalObjects.
            
        </member>
        <member name="M:Orts.Formats.OR.AESignals.BuildSignalWorld(Orts.Formats.OR.MSTSData,Orts.Formats.Msts.SignalConfigurationFile)">
            
             Read all world files to get signal flags
            
        </member>
        <member name="M:Orts.Formats.OR.AESignals.BuildSignalList(Orts.Formats.Msts.TrItem[],Orts.Formats.Msts.TrackNode[],Orts.Formats.Msts.TrackSectionsFile,Orts.Formats.Msts.TrackDatabaseFile,System.Collections.Generic.Dictionary{System.Int32,System.Int32})">
            
             Build signal list from TDB
            
        </member>
        <member name="M:Orts.Formats.OR.AESignals.SplitBackfacing(Orts.Formats.Msts.TrItem[],Orts.Formats.Msts.TrackNode[])">
            
             Split backfacing signals
            
        </member>
        <member name="M:Orts.Formats.OR.AESignals.AddSignal(System.Int32,System.Int32,Orts.Formats.Msts.SignalItem,System.Int32,Orts.Formats.Msts.TrackSectionsFile,Orts.Formats.Msts.TrackDatabaseFile,System.Boolean@)">
            
             This method adds a new Signal to the list
            
        </member>
        <member name="M:Orts.Formats.OR.AESignals.AddSpeed(System.Int32,System.Int32,Orts.Formats.Msts.SpeedPostItem,System.Int32,Orts.Formats.Msts.TrackSectionsFile,Orts.Formats.Msts.TrackDatabaseFile)">
            
             This method adds a new Speedpost to the list
            
        </member>
        <member name="M:Orts.Formats.OR.AESignalObject.#ctor">
            
        </member>
        <member name="M:Orts.Formats.OR.AESignalObject.#ctor(Orts.Formats.OR.AESignalObject)">
            
        </member>
        <member name="T:Orts.Formats.OR.AETraveller">
            <summary>
            A traveller that represents a specific location and direction on a track node databse. Think of it like a virtual truck or bogie that can travel along the track or a virtual car that can travel along the road.
            </summary>
        </member>
        <member name="P:Orts.Formats.OR.AETraveller.TrackNodeIndex">
            <summary>
            Returns the index of the current track node in the database.
            </summary>
        </member>
        <member name="P:Orts.Formats.OR.AETraveller.TrackVectorSectionIndex">
            <summary>
            Returns the index of the current track vector section (individual straight or curved section of track) in the current track node.
            </summary>
        </member>
        <member name="P:Orts.Formats.OR.AETraveller.TrackNodeLength">
            <summary>
            Returns the length of the current track node in meters.
            </summary>
        </member>
        <member name="P:Orts.Formats.OR.AETraveller.TrackNodeOffset">
            <summary>
            Returns the distance down the current track node in meters, based on direction of travel.
            </summary>
        </member>
        <member name="P:Orts.Formats.OR.AETraveller.IsTrack">
            <summary>
            Returns whether this traveller is currently on a (section of) track node (opposed to junction, end of line).
            </summary>
        </member>
        <member name="P:Orts.Formats.OR.AETraveller.IsJunction">
            <summary>
            Returns whether this traveller is currently on a junction node.
            </summary>
        </member>
        <member name="P:Orts.Formats.OR.AETraveller.IsEnd">
            <summary>
            Returns whether this traveller is currently on a end of line node.
            </summary>
        </member>
        <member name="P:Orts.Formats.OR.AETraveller.IsTrackCurved">
            <summary>
            Returns whether this traveller is currently on a section of track which is curved.
            </summary>
        </member>
        <member name="P:Orts.Formats.OR.AETraveller.IsTrackStraight">
            <summary>
            Returns whether this traveller is currently on a section of track which is straight.
            </summary>
        </member>
        <member name="P:Orts.Formats.OR.AETraveller.JunctionEntryPinIndex">
            <summary>
            Returns the pin index number, for the current track node, identifying the route travelled into this track node.
            </summary>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.place(ORTS.Common.WorldLocation)">
            <summary>
            Creates a traveller starting at a specific location, facing with the track node.
            </summary>
            <param name="tSectionDat">Provides vector track sections.</param>
            <param name="trackNodes">Provides track nodes.</param>
            <param name="loc">Starting world location</param>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.place(System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Creates a traveller starting at a specific location, facing with the track node.
            </summary>
            <param name="tSectionDat">Provides vector track sections.</param>
            <param name="trackNodes">Provides track nodes.</param>
            <param name="tileX">Starting tile coordinate.</param>
            <param name="tileZ">Starting tile coordinate.</param>
            <param name="x">Starting coordinate.</param>
            <param name="z">Starting coordinate.</param>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.place(System.Int32,System.Int32,System.Single,System.Single,Orts.Formats.OR.AETraveller.TravellerDirection)">
            <summary>
            Creates a traveller starting at a specific location, facing in the specified direction.
            </summary>
            <param name="tSectionDat">Provides vector track sections.</param>
            <param name="trackNodes">Provides track nodes.</param>
            <param name="tileX">Starting tile coordinate.</param>
            <param name="tileZ">Starting tile coordinate.</param>
            <param name="x">Starting coordinate.</param>
            <param name="z">Starting coordinate.</param>
            <param name="direction">Starting direction.</param>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.place(Orts.Formats.Msts.TrackNode)">
            <summary>
            Creates a traveller starting at the beginning of the specified track node, facing with the track node.
            </summary>
            <param name="tSectionDat">Provides vector track sections.</param>
            <param name="trackNodes">Provides track nodes.</param>
            <param name="startTrackNode">Starting track node.</param>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.place(System.Int32)">
            <summary>
            Creates a traveller starting at the beginning of the specified track node, facing with the track node.
            </summary>
            <param name="startTrackNode">Starting track node ID.</param>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.place(Orts.Formats.Msts.TrackNode,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Creates a traveller starting at a specific location within a specified track node, facing with the track node.
            </summary>
            <param name="tSectionDat">Provides vector track sections.</param>
            <param name="trackNodes">Provides track nodes.</param>
            <param name="startTrackNode">Starting track node.</param>
            <param name="tileX">Starting tile coordinate.</param>
            <param name="tileZ">Starting tile coordinate.</param>
            <param name="x">Starting coordinate.</param>
            <param name="z">Starting coordinate.</param>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.place(System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Place the traveller starting at a specific location within a specified track node, facing with the track node.
            </summary>
            <param name="tSectionDat">Provides vector track sections.</param>
            <param name="trackNodes">Provides track nodes.</param>
            <param name="startTrackNode">Starting track node.</param>
            <param name="tileX">Starting tile coordinate.</param>
            <param name="tileZ">Starting tile coordinate.</param>
            <param name="x">Starting coordinate.</param>
            <param name="z">Starting coordinate.</param>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.place(Orts.Formats.Msts.TrackNode,System.Int32,System.Int32,System.Single,System.Single,Orts.Formats.OR.AETraveller.TravellerDirection)">
            <summary>
            Creates a traveller starting at a specific location within a specified track node, facing in the specified direction.
            </summary>
            <param name="tSectionDat">Provides vector track sections.</param>
            <param name="trackNodes">Provides track nodes.</param>
            <param name="startTrackNode">Starting track node.</param>
            <param name="tileX">Starting tile coordinate.</param>
            <param name="tileZ">Starting tile coordinate.</param>
            <param name="x">Starting coordinate.</param>
            <param name="z">Starting coordinate.</param>
            <param name="direction">Starting direction.</param>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.#ctor(Orts.Formats.OR.AETraveller)">
            <summary>
            Creates a copy of another traveller, starting in the same location and with the same direction.
            </summary>
            <param name="copy">The other traveller to copy.</param>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.#ctor(Orts.Formats.OR.AETraveller,Orts.Formats.OR.AETraveller.TravellerDirection)">
            <summary>
            Creates a copy of another traveller, starting in the same location but with the specified change of direction.
            </summary>
            <param name="copy">The other traveller to copy.</param>
            <param name="reversed">Specifies whether to go the same direction as the <paramref name="copy"/> (Forward) or flip direction (Backward).</param>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.#ctor(Orts.Formats.Msts.TrackSectionsFile,Orts.Formats.Msts.TrackDatabaseFile,System.IO.BinaryReader)">
            <summary>
            Creates a traveller from persisted data.
            </summary>
            <param name="tSectionDat">Provides vector track sections.</param>
            <param name="trackNodes">Provides track nodes.</param>
            <param name="inf">Reader to read persisted data from.</param>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.Save(System.IO.BinaryWriter)">
            <summary>
            Saves a traveller to persisted data.
            </summary>
            <param name="outf">Writer to write persisted data to.</param>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.InitTrackNode(System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Test whether the given location is indeed on (or at least close to) the tracknode given by its index.
            If it is, we initialize the (current) traveller such that it is placed on the correct location on the track.
            The current traveller will not be changed if initialization is not successfull.
            </summary>
            <param name="tni">The index of the trackNode for which we test the location</param>
            <returns>boolean describing whether the location is indeed on the given tracknode and initialization is done</returns>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.TryTrackNode(System.Int32,ORTS.Common.WorldLocation,Orts.Formats.Msts.TrackSectionsFile,Orts.Formats.Msts.TrackNode[])">
            <summary>
            Try whether the given location is indeed on (or at least close to) the tracknode given by its index.
            If it is, we return a TrackNodeCandidate object. 
            </summary>
            <param name="tni">The index of the tracknode we are testing</param>
            <param name="loc">The location for which we want to see if it is on the tracksection</param>
            <param name="TSectionDat">Database with track sections</param>
            <param name="TrackNodes">List of available tracknodes</param>
            <returns>Details on where exactly the location is on the track.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Orts.Formats.OR.AETraveller.TryTrackVectorSection(System.Int32,ORTS.Common.WorldLocation,Orts.Formats.Msts.TrackSectionsFile,Orts.Formats.Msts.TrackNode)" -->
        <member name="M:Orts.Formats.OR.AETraveller.TryTrackSection(System.UInt32,ORTS.Common.WorldLocation,Orts.Formats.Msts.TrackSectionsFile,Orts.Formats.Msts.TrVectorSection)">
            <summary>
            Try whether the given location is indeed on (or at least close to) the tracksection given by its index.
            If it is, we return a TrackNodeCandidate object. 
            </summary>
            <param name="tsi">The track section index</param>
            <param name="loc">The location for which we want to see if it is on the tracksection</param>
            <param name="TSectionDat">Database with track sections</param>
            <param name="trackVectorSection">The parent track vector section</param>
            <returns>Details on where exactly the location is on the track.</returns>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.TryTrackSectionCurved(ORTS.Common.WorldLocation,Orts.Formats.Msts.TrVectorSection,Orts.Formats.Msts.TrackSection)">
            <summary>
            Try whether the given location is indeed on (or at least close to) the given curved tracksection.
            If it is, we return a TrackNodeCandidate object 
            </summary>
            <param name="loc">The location we are looking for</param>
            <param name="trackVectorSection">The trackvector section that is parent of the tracksection</param>
            <param name="trackSection">the specific tracksection we want to try</param>
            <returns>Details on where exactly the location is on the track.</returns>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.TryTrackSectionStraight(ORTS.Common.WorldLocation,Orts.Formats.Msts.TrVectorSection,Orts.Formats.Msts.TrackSection)">
            <summary>
            Try whether the given location is indeed on (or at least close to) the given straight tracksection.
            If it is, we return a TrackNodeCandidate object 
            </summary>
            <param name="loc">The location we are looking for</param>
            <param name="trackVectorSection">The trackvector section that is parent of the tracksection</param>
            <param name="trackSection">the specific tracksection we want to try</param>
            <returns>Details on where exactly the location is on the track.</returns>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.InitTrackSectionSucceeded(Orts.Formats.OR.AETraveller,ORTS.Common.WorldLocation)">
            <summary>
            Initialize the traveller on the already given tracksection, and return true if this succeeded
            </summary>
            <param name="traveller">The traveller that needs to be placed</param>
            <param name="location">The location where it needs to be placed</param>
            <returns>boolean showing whether the traveller can be placed on the section at given location</returns>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.ReverseDirection">
            <summary>
            Switched the direction of the traveller.
            </summary>
            <remarks>
            To set a known direction, use <see cref="P:Orts.Formats.OR.AETraveller.Direction"/>.
            </remarks>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.DistanceTo(ORTS.Common.WorldLocation)">
            <summary>
            Returns the distance from the traveller's current lcation, in its current direction, to the location specified
            </summary>
            <param name="location">Target world location</param>
            <returns>f the target is found, the distance from the traveller's current location, along the track nodes, to the specified location. If the target is not found, <c>-1</c>.</returns>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.DistanceTo(System.Int32,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Returns the distance from the traveller's current location, in its current direction, to the location specified.
            </summary>
            <param name="tileX">Target tile coordinate.</param>
            <param name="tileZ">Target tile coordinate.</param>
            <param name="x">Target coordinate.</param>
            <param name="y">Target coordinate.</param>
            <param name="z">Target coordinate.</param>
            <returns>If the target is found, the distance from the traveller's current location, along the track nodes, to the specified location. If the target is not found, <c>-1</c>.</returns>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.DistanceTo(System.Int32,System.Int32,System.Single,System.Single,System.Single,Orts.Formats.OR.AETraveller@)">
            <summary>
            Returns the distance from the traveller's current location, in its current direction, to the location specified.
            </summary>
            <param name="tileX">Target tile coordinate.</param>
            <param name="tileZ">Target tile coordinate.</param>
            <param name="x">Target coordinate.</param>
            <param name="y">Target coordinate.</param>
            <param name="z">Target coordinate.</param>
            <param name="destination">Traveller at the destination</param>
            <returns>If the target is found, the distance from the traveller's current location, along the track nodes, to the specified location. If the target is not found, <c>-1</c>.</returns>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.DistanceTo(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns the distance from the traveller's current location, in its current direction, to the location specified.
            </summary>
            <param name="tileX">Target tile coordinate.</param>
            <param name="tileZ">Target tile coordinate.</param>
            <param name="x">Target coordinate.</param>
            <param name="y">Target coordinate.</param>
            <param name="z">Target coordinate.</param>
            <param name="maxDistance">MAximum distance to search for specified location.</param>
            <returns>If the target is found, the distance from the traveller's current location, along the track nodes, to the specified location. If the target is not found, <c>-1</c>.</returns>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.DistanceTo(Orts.Formats.Msts.TrackNode,System.Int32,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Returns the distance from the traveller's current location, in its current direction, to the location specified.
            </summary>
            <param name="trackNode">Target track node.</param>
            <param name="tileX">Target tile coordinate.</param>
            <param name="tileZ">Target tile coordinate.</param>
            <param name="x">Target coordinate.</param>
            <param name="y">Target coordinate.</param>
            <param name="z">Target coordinate.</param>
            <returns>If the target is found, the distance from the traveller's current location, along the track nodes, to the specified location. If the target is not found, <c>-1</c>.</returns>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.DistanceTo(Orts.Formats.Msts.TrackNode,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns the distance from the traveller's current location, in its current direction, to the location specified.
            </summary>
            <param name="trackNode">Target track node.</param>
            <param name="tileX">Target tile coordinate.</param>
            <param name="tileZ">Target tile coordinate.</param>
            <param name="x">Target coordinate.</param>
            <param name="y">Target coordinate.</param>
            <param name="z">Target coordinate.</param>
            <param name="maxDistance">MAximum distance to search for specified location.</param>
            <returns>If the target is found, the distance from the traveller's current location, along the track nodes, to the specified location. If the target is not found, <c>-1</c>.</returns>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.DistanceTo(Orts.Formats.OR.AETraveller,Orts.Formats.Msts.TrackNode,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            This is the actual routine that calculates the Distance To a given location along the track.
            </summary>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.MoveTo(Orts.Formats.Msts.TrItem)">
            <summary>
            Move AETraveller to given TrItem
            </summary>
            <param name="tileX">Starting tile coordinate.</param>
            <param name="tileZ">Starting tile coordinate.</param>
            <param name="x">Starting coordinate.</param>
            <param name="z">Starting coordinate.</param>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.MoveToNextItem(System.Collections.Generic.List{Orts.Formats.OR.GlobalItem},System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Move AETraveller to the next OR Item or the given location
            </summary>
            <param name="tileX">Starting tile coordinate.</param>
            <param name="tileZ">Starting tile coordinate.</param>
            <param name="x">Starting coordinate.</param>
            <param name="z">Starting coordinate.</param>
            <returns>If an item is found, the found GlobalItem otherwise null.</returns>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.NextSection">
            <summary>
            Moves the traveller on to the next section of track, whether that is another section within the current track node or a new track node.
            </summary>
            <returns><c>true</c> if the next section exists, <c>false</c> if it does not.</returns>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.NextVectorSection">
            <summary>
            Moves the traveller on to the next section of the current track node only, stopping at the end of the track node.
            </summary>
            <returns><c>true</c> if the next section exists, <c>false</c> if it does not.</returns>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.GetCurrentCurveRadius">
            <summary>
            Current Curve Radius value. Zero if not a curve
            </summary>
            <returns>Current Curve Radius in meters</returns>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.JunctionNodeAhead">
            <summary>
            Finds the nearest junction node in the direction this traveller is facing.
            </summary>
            <returns>The <see cref="T:Orts.Formats.Msts.TrJunctionNode"/> of the found junction, or <c>null</c> if none was found.</returns>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.JunctionNodeBehind">
            <summary>
            Finds the nearest junction node in the opposite direction to this traveller.
            </summary>
            <returns>The <see cref="T:Orts.Formats.Msts.TrJunctionNode"/> of the found junction, or <c>null</c> if none was found.</returns>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.EndNodeAhead">
            <summary>
            Finds the nearest End node in the direction this traveller is facing.
            </summary>
            <returns>The <see cref="T:Orts.Formats.Msts.TrJunctionNode"/> of the found junction, or <c>null</c> if none was found.</returns>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.Move(System.Single)">
            <summary>
            Move the traveller along the track by the specified distance, or until the end of the track is reached.
            </summary>
            <param name="distanceToGo">The distance to travel along the track. Positive values travel in the direction of the traveller and negative values in the opposite direction.</param>
            <returns>The remaining distance if the traveller reached the end of the track.</returns>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.MoveInSection(System.Single)">
            <summary>
            Move the traveller along the track by the specified distance, or until the end of the track is reached, within the current track section only.
            </summary>
            <param name="distanceToGo">The distance to travel along the track section. Positive values travel in the direction of the traveller and negative values in the opposite direction.</param>
            <returns>The remaining distance if the traveller reached the end of the track section.</returns>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.MSTSInterpolateAlongCurve(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            MSTSInterpolateAlongCurve interpolates position along a circular arc.
            (Uses MSTS rigid-body rotation method for curve on a grade.)
            </summary>
            <param name="vPC">Local position vector for Point-of-Curve (PC) in x-z plane.</param>
            <param name="vPC_O">Unit vector in direction from PC to arc center (O).</param>
            <param name="mRotY">Rotation matrix that deflects arc from PC to a point on curve (P).</param>
            <param name="mWorld">Transformation from local to world coordinates.</param>
            <param name="vP">Position vector for desired point on curve (P), returned by reference.</param>
            <returns>Displacement vector from PC to P in world coordinates.</returns>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.MSTSInterpolateAlongStraight(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            MSTSInterpolateAlongStraight interpolates position along a straight stretch.
            </summary>
            <param name="vP0">Local position vector for starting point P0 in x-z plane.</param>
            <param name="vP0_P">Unit vector in direction from P0 to P.</param>
            <param name="offset">Distance from P0 to P.</param>
            <param name="mWorld">Transformation from local to world coordinates.</param>
            <param name="vP">Position vector for desired point(P), returned by reference.</param>
            <returns>Displacement vector from P0 to P in world coordinates.</returns>
        </member>
        <member name="M:Orts.Formats.OR.AETraveller.InitFromCandidate(Orts.Formats.OR.TrackNodeCandidate)">
            <summary>
            During initialization a specific track section (candidate) needs to be found corresponding to the requested worldLocation.
            Once the best (or only) candidate has been found, this routine initializes the traveller from the information
            stored in the candidate.
            </summary>
            <param name="candidate">The candidate with all information needed to place the traveller</param>
        </member>
        <member name="T:Orts.Formats.OR.TrackNodeCandidate">
            <summary>
            Helper class to store details of a possible candidate where we can place the traveller.
            Used during initialization as part of constructer(s)
            </summary>
        </member>
        <member name="M:Orts.Formats.OR.TrackNodeCandidate.#ctor(System.Single,System.Single,System.Boolean)">
            <summary>
            Constructor will only be called deep into a section, where the actual lon(gitude) and lat(ttide) are being calculated.
            </summary>
        </member>
        <member name="T:Orts.Formats.OR.ActionContainer">
            <summary>
            ActionContainer
            class to manage the available Actions for Editor and RunActivity
            </summary>
        </member>
        <member name="T:Orts.Formats.OR.AuxActionRef">
            <summary>
            AuxActionRef
            The main class to define Auxiliary Action through the editor and used by RunActivity
            </summary>
        </member>
        <member name="M:Orts.Formats.OR.AuxActionRef.#ctor(Orts.Formats.OR.AuxActionRef.AUX_ACTION,System.Boolean)">
            <summary>
            AIAuxActionsRef: Generic Constructor
            The specific datas are used to fired the Action.
            </summary>
        </member>
        <member name="T:Orts.Formats.OR.AuxActionWP">
            <summary>
            AuxActionWP
            Only used inside the editor (no multiple inheritance)
            </summary>
        </member>
        <member name="T:Orts.Formats.OR.GlobalItem">
            <summary>
            GlobalItem: The generic item for the viewer and json
            </summary>
        </member>
        <member name="M:Orts.Formats.OR.GlobalItem.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="T:Orts.Formats.OR.WeatherFile">
             <summary>
            
             class ORWeatherFile
             </summary>
        </member>
        <member name="T:Orts.Formats.OR.ORRouteConfig">
            <summary>
            ORRouteConfig is the main class to access the OpenRail specific data for a route.  These data complete the MSTS one in terms of Station
            and Station's connectors to track.
            The data are saved in json file into the main repository of the route.
            </summary>
        </member>
        <member name="M:Orts.Formats.OR.ORRouteConfig.#ctor">
            <summary>
            The class constructor, but, don't use it.  Prefer to use the static method 'LoadConfig' wich return this object
            </summary>
        </member>
        <member name="M:Orts.Formats.OR.ORRouteConfig.SetTileBase(Orts.Formats.OR.MSTSBase)">
            <summary>
            SetTileBase is used to initialize the TileBase for the route.  This information is then used to 'reduce' the value of the
            MSTS Coordinate wich are too big to be correctly shown in the editor
            </summary>
            <param name="tileBase"></param>
        </member>
        <member name="M:Orts.Formats.OR.ORRouteConfig.AddItem(Orts.Formats.OR.GlobalItem)">
            <summary>
            Use this function to add a new item into the 'AllItems' list.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Orts.Formats.OR.ORRouteConfig.RemoveConnectorItem(Orts.Formats.OR.GlobalItem)">
            <summary>
            Used to remove a connector item from the 'AllItem' list. 
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Orts.Formats.OR.ORRouteConfig.RemoveItem(Orts.Formats.OR.GlobalItem)">
            <summary>
            Used to remove an item from all list of items: AllItems, RouteItems
            </summary>
            <param name="item">the item to remove</param>
        </member>
        <member name="M:Orts.Formats.OR.ORRouteConfig.GetORItemForNode(System.Int32,Orts.Formats.Msts.TrackNode[],Orts.Formats.Msts.TrackSectionsFile)">
            <summary>
            Scan the current orRouteConfig and search for items related to the given node
            </summary>
            <param name="iNode">The current node index</param>
            <param name="orRouteConfig">The Open Rail configuration coming from Editor</param>
            <param name="trackNodes">The list of MSTS Track Nodes</param>
            <param name="tsectiondat">The list of MSTS Section datas</param>
        </member>
        <member name="T:Orts.Formats.OR.ORConfig">
            <summary>
            ORConfig is the main class to access the OpenRail generic data for all route.
            </summary>
        </member>
        <member name="T:Orts.Formats.OR.AESignalItem">
            <summary>
            Defines a signal being drawn in a 2D view.
            </summary>
        </member>
        <member name="F:Orts.Formats.OR.AESignalItem.Signal">
            <summary>
            The underlying signal object as referenced by the TrItem.
            </summary>
        </member>
        <member name="P:Orts.Formats.OR.AESignalItem.IsProceed">
            <summary>
            For now, returns true if any of the signal heads shows any "clear" aspect.
            This obviously needs some refinement.
            </summary>
        </member>
        <member name="M:Orts.Formats.OR.AESignalItem.#ctor(Orts.Formats.Msts.SignalItem,Orts.Formats.OR.AESignalObject,Orts.Formats.Msts.TrackDatabaseFile)">
            <summary>
            
            </summary>
            <param name="sideItem"></param>
            <param name="signal"></param>
        </member>
        <member name="T:Orts.Formats.OR.AEJunctionItem">
            <summary>
            Defines a junction being drawn in a 2D view.
            </summary>
        </member>
        <member name="M:Orts.Formats.OR.AEJunctionItem.#ctor(Orts.Formats.Msts.TrackNode)">
            <summary>
            
            </summary>
            <param name="sideItem"></param>
            <param name="signal"></param>
        </member>
        <member name="T:Orts.Formats.OR.AECrossOver">
            <summary>
            Defines a CrossOver
            Only for display at this level
            </summary>
            
        </member>
        <member name="M:Orts.Formats.OR.AEBufferItem.#ctor(Orts.Formats.Msts.TrackNode)">
            <summary>
            
            </summary>
            <param name="sideItem"></param>
            <param name="signal"></param>
        </member>
        <member name="T:Orts.Formats.OR.SideItem">
            <summary>
            Defines a siding sideItem  (platform, difing or passing)
            SideStartItem is the place where the Siding Label is attached
            SideEndItem is the end place
            </summary>
            
        </member>
        <member name="M:Orts.Formats.OR.SideStartItem.#ctor(Orts.Formats.OR.TrackSegment,Orts.Formats.Msts.TrItem)">
            <summary>
            The underlying track sideItem.
            </summary>
            <param name="sideItem"></param>
            <param name="signal"></param>
        </member>
        <member name="M:Orts.Formats.OR.SideEndItem.#ctor(Orts.Formats.OR.TrackSegment,Orts.Formats.Msts.TrItem,Orts.Formats.OR.SideStartItem)">
            <summary>
            The underlying track sideItem.
            </summary>
        </member>
        <member name="T:Orts.Formats.OR.ShapeItem">
            <summary>
            Defines a siding name being drawn in a 2D view.
            Work in Progress
            </summary>
        </member>
        <member name="M:Orts.Formats.OR.ShapeItem.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="sideItem"></param>
            <param name="signal"></param>
        </member>
        <member name="T:Orts.Formats.OR.TimetableFileLite">
            <summary>
            class TimetableFileLite
            provides pre-information for menu
            extracts only description and list of trains
            </summary>
        </member>
        <member name="M:Orts.Formats.OR.TimetableFileLite.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Orts.Formats.OR.TimetableFileLite.TTFilePreliminaryRead(System.String,System.IO.StreamReader,System.String)">
            <summary>
            ORTTFilePreliminaryRead
            Read function to obtain pre-info
            </summary>
            <param name="filePath"></param>
            <param name="scrStream"></param>
            <param name="Separator"></param>
        </member>
        <member name="T:Orts.Formats.OR.TimetableGroupFileLite">
            <summary>
            class TimetableGroupFileLite
            Creates pre-info for Multi TT file
            returns Description and list of pre-info per file
            </summary>
        </member>
        <member name="M:Orts.Formats.OR.TimetableGroupFileLite.#ctor(Orts.Formats.OR.TimetableFileLite)">
            <summary>
            Constructor
            </summary>
            <param name="SingleTTInfo"></param>
        </member>
        <member name="M:Orts.Formats.OR.TimetableGroupFileLite.MultiTTFilePreliminaryRead(System.String,System.String,System.IO.StreamReader)">
            <summary>
            ORMultiTTFilePreliminaryRead
            Reads MultiTTfile for preliminary info
            </summary>
            <param name="filePath"></param>
            <param name="directory"></param>
            <param name="scrStream"></param>
        </member>
        <member name="T:Orts.Formats.OR.TimetableGroupFile">
            <summary>
            class TimetableGroupFile
            extracts filenames from multiTTfile, extents names to full path
            </summary>
        </member>
        <member name="M:Orts.Formats.OR.TimetableGroupFile.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="filePath"></param>
            <param name="directory"></param>
        </member>
        <member name="M:Orts.Formats.OR.TimetableGroupFile.MultiTTFileRead(System.String,System.String,System.IO.StreamReader)">
            <summary>
            MultiTTFileRead
            Reads multiTTfile and extracts filenames
            </summary>
            <param name="filePath"></param>
            <param name="directory"></param>
            <param name="scrStream"></param>
        </member>
        <member name="M:Orts.Formats.OR.TrackNodeAE.getMSTSCoord(Orts.Formats.Msts.TrackNode,System.Int32)">
            <summary>
            Permet de récupérer les coordonnées du node au format MSTSCoord propre à l'éditeur d'activité
            Return the MSTSCoord for the current node as needed by Activity Editor
                For vectorNode with multiple section, the direction is used to give the first encountered section
            </summary>
        </member>
    </members>
</doc>
