<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ORTS.Settings</name>
    </assembly>
    <members>
        <member name="T:ORTS.Settings.KeyModifiers">
            <summary>
            Specifies the keyboard modifiers for <see cref="T:ORTS.Common.Input.UserCommand"/>.
            </summary>
        </member>
        <member name="T:ORTS.Settings.InputSettings">
            <summary>
            Loads, stores and manages keyboard input settings for all available <see cref="T:ORTS.Common.Input.UserCommand"/>.
            </summary>
            <remarks>
            <para>Keyboard input is processed by associating specific combinations of keys (either scan codes or virtual keys) and modifiers with each <see cref="T:ORTS.Common.Input.UserCommand"/>.</para>
            <para>There are three kinds of <see cref="T:ORTS.Common.Input.UserCommand"/>, each using a different <see cref="T:ORTS.Settings.UserCommandInput"/>:</para>
            <list type="bullet">
            <item><description><see cref="T:ORTS.Settings.UserCommandModifierInput"/> represents a specific combination of keyboard modifiers (Shift, Control and Alt). E.g. Shift.</description></item>
            <item><description><see cref="T:ORTS.Settings.UserCommandKeyInput"/> represents a key (scan code or virtual key) and a specific combination of keyboard modifiers. E.g. Alt-F4.</description></item>
            <item><description><see cref="T:ORTS.Settings.UserCommandModifiableKeyInput"/> represents a key (scan code or virtual key), a specific combination of keyboard modifiers and a set of keyboard modifiers to ignore. E.g. Up Arrow (+ Shift) (+ Control).</description></item>
            </list>
            <para>Keyboard input is identified in two distinct ways:</para>
            <list>
            <item><term>Scan code</term><description>A scan code represents a specific location on the physical keyboard, irrespective of the user's locale, keyboard layout and other enviromental settings. For this reason, this is the preferred way to refer to the "main" area of the keyboard - this area varies significantly by locale and usually it is the physical location that matters.</description></item>
            <item><term>Virtual key</term><description>A virtual key represents a logical key on the keyboard, irrespective of where it might be located. For keys outside the "main" area, this is much the same as scan codes and is preferred when refering to logical keys like "Up Arrow".</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:ORTS.Settings.InputSettings.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instances of the <see cref="T:ORTS.Settings.InputSettings"/> class with the specified options.
            </summary>
            <param name="options">The list of one-time options to override persisted settings, if any.</param>
        </member>
        <member name="T:ORTS.Settings.UserCommandInput">
            <summary>
            Represents a single user-triggerable keyboard input command.
            </summary>
        </member>
        <member name="T:ORTS.Settings.UserCommandModifierInput">
            <summary>
            Stores a specific combination of keyboard modifiers for comparison with a <see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/>.
            </summary>
        </member>
        <member name="T:ORTS.Settings.UserCommandKeyInput">
            <summary>
            Stores a key and specific combination of keyboard modifiers for comparison with a <see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/>.
            </summary>
        </member>
        <member name="T:ORTS.Settings.UserCommandModifiableKeyInput">
            <summary>
            Stores a key, specific combination of keyboard modifiers and a set of keyboard modifiers to ignore for comparison with a <see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/>.
            </summary>
        </member>
    </members>
</doc>
